#!/bin/bash

DEFAULT_HOSTNAME="raspberrypi"
ARCH=`uname -m`
NEW_HOSTNAME="dgtcentaur"
CONFIG="/boot/config.txt"
PACKAGE="DGTCentaurMods"
DGTCM_PATH="/opt/${PACKAGE}"
DATABASE="${DGTCM_PATH}/db/centaur.db"
CONFIGINI="${DGTCM_PATH}/config/centaur.ini"
CMDLINEFILE="/boot/cmdline.txt"
BTMAIN="/etc/bluetooth/main.conf"
DBUSSERVICE="/etc/systemd/system/dbus-org.bluez.service"
CENTAUR="/home/pi/centaur/"
CENTAUR_ENGINE="/home/pi/centaur/engines"
STOCKFISH="stockfish_pi"
RODENT_REPO="https://github.com/nescitus/rodent-iv.git"
MAIA_REPO="https://github.com/CSSLab/maia-chess.git"
FENLOG="/home/pi/centaur/fen.log"
################################

if ! cat $CONFIG | grep -q "#dgtcentaurmods"
then
    echo -e "::: Hardware configuration"
    echo -e "::: Backup some first"
    cp $CONFIG $CONFIG.bak
    cp $CMDLINEFILE $CMDLINEFILE.bak

    # Enabke SPI bus if not enbaled
    echo "::: Checking SPI"
        SPION=`cat $CONFIG | grep "^#dtparam=spi=on"`
        SPI10=`cat $CONFIG | grep "^dtoverlay=spi1-3cs"`
    if [ ! -z $SPION ]
    then
        sed -i "s/#dtparam=spi=on/dtparam=spi=on/g" $CONFIG
    else
        sed -i "$ a dtparam=spi=on" $CONFIG
    fi    
    
    echo -e "::: Checking SPI 1.0 bus."
    if [ -z $SPI10 ]
    then
        sed -i "$ a dtoverlay=spi1-3cs" $CONFIG
    fi

echo "::: Checking serial port. "
    UARTON=`cat $CONFIG | grep "^#enable_uart=1"`
    if [ ! -z $UARTON ]
    then
        echo "::: Enabling serial port..."
        sed -i "s/#enable_uart=1.*/enable_uart=1/g" $CONFIG
    else
        sed -i "$ a enable_uart=1" $CONFIG
    fi
    # Mark file as modified
    sed -i "$ a #dgtcentaurmods" $CONFIG
fi

if cat $CMDLINEFILE | grep -q "console=serial0"
then
    echo -e "::: Disable console on ttyS0"
        REPLY=$(sed 's/[^ ]* *//' $CMDLINEFILE)
        echo -e "$REPLY" > $CMDLINEFILE
fi

    # Setting up Bluetooth
    #echo -e "::: Setting up bluetooth."
    #    echo -e "$BTPIN" > /etc/bluetooth/pin.conf
    #    echo -e "$BTMACHINEINFO" > /etc/machine-info


#Make DGTCM available to all users
rm /usr/lib/python3/dist-packages/DGTCentaurMods
cd /usr/lib/python3/dist-packages && sudo ln -s ${DGTCM_PATH} DGTCentaurMods

# Allow flask on port 80
sudo touch /etc/authbind/byport/80
sudo chmod 777 /etc/authbind/byport/80

# Allow memory access for epaper driver
sudo usermod -a -G gpio pi
sudo usermod -a -G kmem pi

##### Enable systemd services.
echo -e "::: Setup services"
    systemctl daemon-reload
    systemctl enable rfcomm.service
    systemctl enable centaurmods-web.service
    systemctl enable DGTCentaurMods.service
    systemctl enable ntp
    systemctl enable var-run-sdp.path
    systemctl enable var-run-sdp.service
    systemctl enable stopDGTController.service
    systemctl start var-run-sdp.path


# Update main.conf in /etc/bluetooth
    cp $BTMAIN $BTMAIN.bak
    sed -i "/DiscoverableTimeout/s/^# *//" $BTMAIN
    sed -i "/PairableTimeout/s/^# *//" $BTMAIN
    sed -i "s/#JustWorksRepairing = never/JustWorksRepairing = always/g" $BTMAIN
    #Mark file as changed
    sed -i "$ a #dgtcentaurmods" $BTMAIN

systemctl daemon-reload


# Update rc.local
if ! cat /etc/rc.local | grep -q "#dgtcentaurmods"
then
    cp /etc/rc.local /etc/rc.local.bak
    if cat /etc/rc.local | grep -q "^exit 0" /etc/rc.local; then sed -i "s/^exit 0.*//g" /etc/rc.local; fi
    sed -i "$ a	sudo sdptool add SP & \n\
\n\
sudo bluetoothctl <<EOF \n\
power on \n\
agent on \n\
discoverable on \n\
pairable on \n\
EOF" /etc/rc.local
    sed -i "$ a exit 0" /etc/rc.local
    # Mark rc.local as changed.
    sed -i "$ a #dgtcentaurmods" /etc/rc.local
fi


function update_hostname {
#Do not update unless hostname is still the default one.
if [ $(hostname) = $DEFAULT_HOSTNAME ]
then
    sed -i "s/$DEFAULT_HOSTNAME/$NEW_HOSTNAME/g" /etc/hosts
    sed -i "s/$DEFAULT_HOSTNAME/$NEW_HOSTNAME/g" /etc/hostname
fi
}

# Install Stockfish if in build
if [[ -e ${DGTCM_PATH}/engines/$STOCKFISH ]]
then
    echo -e "::: Installing Stockfish engine"
    if [[ -d $CENTAUR_ENGINE ]]
    then
        mv ${CENTAUR_ENGINE}/$STOCKFISH ${CENTAUR_ENGINE}/$STOCKFISH.bak
        mv ${DGTCM_PATH}/engines/$STOCKFISH $CENTAUR_ENGINE/$STOCKFISH
        chown -R pi.root $CENTAUR_ENGINE
    else
        mkdir -p $CENTAUR_ENGINE
        mv ${DGTCM_PATH}/engines/$STOCKFISH $CENTAUR_ENGINE
        chown -R pi.root $CENTAUR_ENGINE
    fi
#else
#    echo -e "Downloading Stockfish..."
    # TODO: find a way to download.
fi

#Check if fen.log is there
if [ ! -e $FENLOG ]
then
    touch $FENLOG
fi


# Check if pip is installed
if sudo dpkg -l | grep -q python3-pip
then
    echo "::: Pip is installed."
else
    echo "::: Pip not installed. Installing now..."
    sudo apt-get install -y python3-pip
fi

echo -e "::: Installing python packages."
    cd $DGTCM_PATH
    CFLAGS="-fcommon" pip3 install -r $DGTCM_PATH/setup/requirements.txt


function insertMaia {
    if [[ $ARCH == "armv6"* ]]; then
        #Remove maia and don't get weights
        echo -e "::: This system is not compatible with maia engine. Removing"
        rm -rf ${DGTCM_PATH}/engines/maia* > /dev/null 2>&1
        return
    fi
    if [ ! -d  ${DGTCM_PATH}/tmp ]
    then
        mkdir ${DGTCM_PATH}/tmp
    fi
    if [ ! -d ${DGTCM_PATH}/tmp/maia-chess ]
    then
        git clone --depth 1 $MAIA_REPO ${DGTCM_PATH}/tmp/maia-chess;
        if (($? > 0))
            then echo "git clone maia chess failed with $?"
        fi
    fi
    cp -rn ${DGTCM_PATH}/tmp/maia-chess/maia_weights ${DGTCM_PATH}/engines/
    cp -n ${DGTCM_PATH}/engines/maia_weights/maia-1900.pb.gz ${DGTCM_PATH}/engines/
    chmod 755 ${DGTCM_PATH}/engines/maia
}

function insertRodentIV {
    if [ ! -d  ${DGTCM_PATH}/tmp ]
    then
        mkdir ${DGTCM_PATH}/tmp
    fi
    if [ ! -d ${DGTCM_PATH}/tmp/rodent-iv ]
    then
        git clone --depth 1 $RODENT_REPO ${DGTCM_PATH}/tmp/rodent-iv;
        if (($? > 0))
            then echo "git clone rodentiv failed with $?"
        fi
    fi
    cp -rn ${DGTCM_PATH}/tmp/rodent-iv/personalities ${DGTCM_PATH}/engines/
    cp -rn ${DGTCM_PATH}/tmp/rodent-iv/books ${DGTCM_PATH}/engines/
    chmod 744 ${DGTCM_PATH}/engines/rodentIV
}

function insertZahak {
    chmod 755 ${DGTCM_PATH}/engines/zahak

}


insertMaia
insertRodentIV
insertZahak

# Setting final permissions
function setPermissions {
    chown -R pi.pi ${DGTCM_PATH}
    chown -R pi.root $CENTAUR

}


function copyDefaults {
    cp -rn ${DGTCM_PATH}/defaults/* ${DGTCM_PATH}/
}

update_hostname

#Old versions special handling tasks
function cleanOldBeta {
    rm -rf /home/pi/DGTCentaurMods
}


function restoreConfig {
    cp /tmp/config/centaur.ini $CONFIGINI
}


function restoreDatabase {
    cp /tmp/db/centaur.db ${DGTCM_PATH}/db && rm -r /tmp/db
}


case $1 in
    configure* )
        case $2 in
            1.0-beta|1.0.1-beta)
                cleanOldBeta
                ;;
        esac       
    echo -e "::: Finalizing install..."
    #Copy over all defaults from /defaults
    copyDefaults

    setPermissions
    ;;
esac


exit 0

